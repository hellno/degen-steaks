type Dao {
  id: ID!
  totalDegenFee: BigInt!
}

type User {
  id: ID!
  creatorFeeReceived: BigInt!
  totalDegenWon: BigInt!
  totalDegenBet: BigInt!
  totalSlashFee: BigInt!
  bets: [Bet!]! @derivedFrom(field: "user")
  placedBets: [PlacedBet!]! @derivedFrom(field: "user")
}

type Market {
  id: ID!
  creator: User!
  startTime: Int!
  targetPrice: BigInt!
  endTime: BigInt!
  totalSharesHigher: BigInt!
  totalSharesLower: BigInt!
  totalSteakedDegen: BigInt!
  betCount: Int!
  degenCollected: BigInt!
  isResolved: Boolean!
  highWon: Boolean
  endPrice: BigInt
  totalDegen: BigInt
  creatorFee: BigInt
  slashTransaction: String
  bets: [Bet!]! @derivedFrom(field: "market")
  placedBets: [PlacedBet!]! @derivedFrom(field: "market")
}

type Bet {
  id: ID!
  user: User!
  market: Market!
  sharesHigher: BigInt!
  sharesLower: BigInt!
  cashedOut: Boolean
  cashOutTransaction: String
  cashedOutDegen: BigInt
  placedBets: [PlacedBet!]! @derivedFrom(field: "bet")
}

type PlacedBet {
  id: ID!
  user: User!
  bet: Bet!
  market: Market!
  degen: BigInt!
  steaks: BigInt!
  feeSteaks: BigInt!
  betShares: BigInt!
  direction: BigInt!
  transaction: String!
}
